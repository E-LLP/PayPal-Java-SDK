package com.paypal.api.payments;

import java.util.List;

import com.paypal.base.rest.PayPalModel;

import lombok.AccessLevel;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;

@Data
@EqualsAndHashCode(callSuper=false)
@Accessors(chain = true)
public class PayoutItemDetails extends PayPalModel {

	/**
	 * An ID for an individual payout. Provided by PayPal, such as in the case
	 * of getting the status of a batch request. 30 characters max.
	 */
	private String payoutItemId;

	/**
	 * Generated ID for the transaction. 30 characters max.
	 */
	private String transactionId;

	/**
	 * Status of a transaction.
	 */
	private String transactionStatus;

	/**
	 * Amount of money in U.S. dollars for fees.
	 */
	private Currency payoutItemFee;

	/**
	 * An ID for the batch payout. Generated by PayPal. 30 characters max.
	 */
	private String payoutBatchId;

	/**
	 * Sender-created ID for tracking the batch in an accounting system. 30
	 * characters max.
	 */
	private String senderBatchId;

	/**
	 * The data for a payout item that the sender initially provided.
	 */
	private PayoutItem payoutItem;

	/**
	 * Time of the last processing for this item.
	 */
	private String timeProcessed;

	/**
	 * *
	 */
	private Error errors;
	
	/**
	 * HATEOAS links
	 */
	private List<Links> links;

	/**
	 * Default Constructor
	 */
	public PayoutItemDetails() {
	}

	/**
	 * Parameterized Constructor
	 */
	public PayoutItemDetails(String payoutItemId, String payoutBatchId,
			PayoutItem payoutItem, String timeProcessed) {
		this.payoutItemId = payoutItemId;
		this.payoutBatchId = payoutBatchId;
		this.payoutItem = payoutItem;
		this.timeProcessed = timeProcessed;
	}
	
	/**
	 * Setter for error
	 */
	public PayoutItemDetails setError(Error error) {
		this.errors = error;
		return this;
	}

	/**
	 * Getter for error
	 */
	public Error getError() {
		return this.errors;
	}
	
}
